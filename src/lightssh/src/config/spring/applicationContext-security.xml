<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd" default-lazy-init="true">

    <!--<debug />-->

    <global-method-security pre-post-annotations="enabled" />

    <http pattern="/styles/**" security="none"/>
    <http pattern="/scripts/**" security="none"/>
    <http pattern="/files/**" security="none"/>
    <http pattern="/images/**" security="none"/>
    <http pattern="/pages/security/system/**" security="none"/>
    <http pattern="/index.jsp" security="none"/>
    <http pattern="/login.do*" security="none"/>
    <http pattern="/logout" security="none"/>
    <http pattern="/index.do*" security="none"/>

    <http auto-config="false" entry-point-ref="loginUrlAuthenticationEntryPoint"
    	use-expressions="true" path-type="regex" access-denied-page="/pages/security/system/403.jsp">
        <custom-filter position="FORM_LOGIN_FILTER" ref="captchaAuthenticationFilter"/>
        <custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
        
        <!--<intercept-url pattern="\A/security/account/edit.do\\?password*\Z" access="hasRole('SECURITY_ACCOUNT_EDITPASSWORD')"/>-->
		
		<intercept-url pattern="\A/security/account/edit.do\\?.*\Z" access="hasRole('SECURITY_ACCOUNT_EDIT')"/>
    	<intercept-url pattern="\A/security/account/save.do\\?.*\Z" access="hasRole('SECURITY_ACCOUNT_EDIT')"/>
    	<intercept-url pattern="\A/security/account/password.do\\?.*\Z" access="hasRole('SECURITY_ACCOUNT_PASSWORD')"/>
    	<intercept-url pattern="\A/security/account/list.do\\?.*\Z" access="hasRole('SECURITY_ACCOUNT_LIST')"/>
    	<intercept-url pattern="\A/security/account/remove.do\\?.*\Z" access="hasRole('SECURITY_ACCOUNT_REMOVE')"/>
    	<intercept-url pattern="\A/security/account/role.do\\?.*\Z" access="hasRole('SECURITY_ACCOUNT_ROLE')"/>
    	
    	<intercept-url pattern="\A/security/role/edit.do\\?.*\Z" access="hasRole('SECURITY_ROLE_EDIT')"/>
    	<intercept-url pattern="\A/security/role/save.do\\?.*\Z" access="hasRole('SECURITY_ROLE_EDIT')"/>
    	<intercept-url pattern="\A/security/role/list.do\\?.*\Z" access="hasRole('SECURITY_ROLE_LIST')"/>
    	<intercept-url pattern="\A/security/role/remove.do\\?.*\Z" access="hasRole('SECURITY_ROLE_REMOVE')"/>
    	<intercept-url pattern="\A/security/role/permission.do\\?.*\Z" access="hasRole('SECURITY_ROLE_PERMISSION')"/>
    	<intercept-url pattern="\A/security/role/addPermission.do\\?.*\Z" access="hasRole('SECURITY_ROLE_PERMISSION')"/>
		
		<intercept-url pattern="/**" access="isAuthenticated()"/>

        <!--<form-login login-page="/login.do" default-target-url="/welcome.do"/>-->
        <logout logout-url="/logout.do" logout-success-url="/login.do" delete-cookies="JSESSIONID"/>
        <remember-me />
        
    	<!-- X509 client authentication support-->
        <!--<x509 />-->
        
        <!-- limit the number of sessions a user can have -->
        <session-management invalid-session-url="/login.do" session-authentication-strategy-ref="sas"/>

    </http>

	<!-- realm -->
    <authentication-manager alias="myAuthenticationManager">
		<authentication-provider user-service-ref='loginAccountManager'/>
    </authentication-manager>
    
    <beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
 		<beans:property name="loginFormUrl" value="/login.do"/>
	</beans:bean>

	<!-- captcha filter-->
	<beans:bean id="captchaAuthenticationFilter" class="com.google.code.lightssh.project.security.spring.CaptchaAuthenticationFilter">
		<beans:property name="authenticationManager" ref="myAuthenticationManager"/>
		<beans:property name="authenticationFailureHandler" ref="failureHandler"/>
		<beans:property name="authenticationSuccessHandler" ref="successHandler"/>
		<beans:property name="sessionAuthenticationStrategy" ref="sas" />
	</beans:bean>
	
	<!-- login success URL -->
	<beans:bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
 		<beans:property name="defaultTargetUrl" value="/welcome.do"/>
	</beans:bean>
	
	<!-- login failure URL -->
	<beans:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
 		<beans:property name="defaultFailureUrl" value="/login.do"/>
	</beans:bean>
	
	<!-- concurrency filter -->
	<beans:bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:property name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="expiredUrl" value="/pages/security/system/concurrency_user_error.jsp" />
	</beans:bean>
	
	<beans:bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="maximumSessions" value="1" />
	</beans:bean>
	
	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
	
</beans:beans>
